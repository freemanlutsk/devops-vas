---

- name: Install list of packages
  ansible.builtin.apt:
    name:
      - 'ca-certificates'
      - 'gnupg'
      - 'python3-setuptools'
      - 'python3-pip'
      - 'python3-docker'
    force_apt_get: true
    update_cache: true

- name: Add apt-key for docker 'Ubuntu'
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
  when: ansible_distribution == 'Ubuntu'

- name: Add apt-key for docker 'Debian'
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/debian/gpg"
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: true
  when: ansible_distribution == 'Debian'

- name: Add repo for docker 'Ubuntu'
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Add repo for docker 'Debian'
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_distribution == 'Debian'

- name: Install docker comunity edition
  ansible.builtin.apt:
    name:
      - 'docker-ce'
      - 'docker-ce-cli'
      - 'containerd.io'
      - 'docker-compose-plugin'
    force_apt_get: true
    update_cache: true

- name: Install ctop
  ansible.builtin.get_url:
    url: "https://github.com/bcicen/ctop/releases/download/v{{ CTOP_VERSION }}/ctop-{{ CTOP_VERSION }}-linux-amd64"
    dest: "/usr/local/bin/ctop"
    force: true
    owner: "root"
    group: "root"
    mode: "0755"

- name: Creates /etc/docker/ directory
  ansible.builtin.file:
    path: /etc/docker
    owner: root
    group: root
    mode: '0644'
    state: directory

- name: Add cron to clear images
  ansible.builtin.cron:
    name: "clear old images"
    weekday: "1"
    minute: "0"
    hour: "7"
    job: "docker system prune -af"

- name: Install pip docker
  ansible.builtin.pip:
    name:
      - 'docker'
